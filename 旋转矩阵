class Solution {
    public void rotate(int[][] matrix) {
        int n = matrix.length;
        for(int i = 0;i < n/2; i++){//行：从0开始，到n/2向下取整
            for(int j = i; j < n - i - 1; j++){//列：从i开始，到n-1-i-1
                int temp = matrix[i][j]; //存1
                matrix[i][j] = matrix[n - j - 1][i];  //4给1
                matrix[n - j - 1][i] = matrix[n - i - 1][n - j - 1];  //3给4
                matrix[n - i - 1][n - j - 1] = matrix[j][n - i - 1];  //2给3
                matrix[j][n - i - 1] = temp; // 1给2
            }
        }
    }
}

四个位置的坐标：(i,j)    (j,n-i-1)   (n-i-1,n-j-1)    (n-j-1,i)
![image](https://github.com/Algorithm-qiu/LeetCode/blob/Algorithm-qiu-patch-image/19B64384-49B2-440b-9452-22E587A3D62E.png)
![image](https://github.com/Algorithm-qiu/LeetCode/blob/Algorithm-qiu-patch-image/B17A35E1-11B9-4c3a-8D64-E38BB42B10D7.png)
